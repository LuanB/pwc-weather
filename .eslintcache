[{"/home/ux5/Projects/codingtest/pwc/weather-app/src/index.js":"1","/home/ux5/Projects/codingtest/pwc/weather-app/src/reportWebVitals.js":"2","/home/ux5/Projects/codingtest/pwc/weather-app/src/App.js":"3","/home/ux5/Projects/codingtest/pwc/weather-app/src/components/WeatherWidgetContainer/index.jsx":"4","/home/ux5/Projects/codingtest/pwc/weather-app/src/context/appContext.js":"5","/home/ux5/Projects/codingtest/pwc/weather-app/src/reducers/weatherAppReducer.js":"6","/home/ux5/Projects/codingtest/pwc/weather-app/src/components/WeatherCard/index.jsx":"7","/home/ux5/Projects/codingtest/pwc/weather-app/src/components/CurrentLocationCard/index.jsx":"8","/home/ux5/Projects/codingtest/pwc/weather-app/src/utils/apiKeys.js":"9","/home/ux5/Projects/codingtest/pwc/weather-app/src/hooks/useFetch.js":"10","/home/ux5/Projects/codingtest/pwc/weather-app/src/components/WeatherCardContainer/index.jsx":"11","/home/ux5/Projects/codingtest/pwc/weather-app/src/utils/utils.js":"12","/home/ux5/Projects/codingtest/pwc/weather-app/src/components/HumidityDataCard/index.jsx":"13","/home/ux5/Projects/codingtest/pwc/weather-app/src/components/SearchContainer/index.jsx":"14","/home/ux5/Projects/codingtest/pwc/weather-app/src/hooks/useInputState.js":"15","/home/ux5/Projects/codingtest/pwc/weather-app/src/hooks/useToggleState.js":"16"},{"size":528,"mtime":1606914961904,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1606827423665,"results":"19","hashOfConfig":"18"},{"size":364,"mtime":1606892693420,"results":"20","hashOfConfig":"18"},{"size":3915,"mtime":1606926638189,"results":"21","hashOfConfig":"18"},{"size":699,"mtime":1606928299001,"results":"22","hashOfConfig":"18"},{"size":1100,"mtime":1606928760816,"results":"23","hashOfConfig":"18"},{"size":587,"mtime":1606930210290,"results":"24","hashOfConfig":"18"},{"size":897,"mtime":1606930808005,"results":"25","hashOfConfig":"18"},{"size":108,"mtime":1606900599612,"results":"26","hashOfConfig":"18"},{"size":668,"mtime":1606882733459,"results":"27","hashOfConfig":"18"},{"size":1078,"mtime":1606929250078,"results":"28","hashOfConfig":"18"},{"size":6889,"mtime":1606930157713,"results":"29","hashOfConfig":"18"},{"size":690,"mtime":1606923089019,"results":"30","hashOfConfig":"18"},{"size":1797,"mtime":1606932154267,"results":"31","hashOfConfig":"18"},{"size":288,"mtime":1606924837849,"results":"32","hashOfConfig":"18"},{"size":316,"mtime":1606927360655,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"tn227j",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/home/ux5/Projects/codingtest/pwc/weather-app/src/index.js",[],["69","70"],"/home/ux5/Projects/codingtest/pwc/weather-app/src/reportWebVitals.js",[],"/home/ux5/Projects/codingtest/pwc/weather-app/src/App.js",[],"/home/ux5/Projects/codingtest/pwc/weather-app/src/components/WeatherWidgetContainer/index.jsx",["71","72","73"],"import React, { useEffect, useContext } from \"react\";\n\nimport CurrentLocationCard from \"../CurrentLocationCard\";\nimport { AppContext, DispatchContext } from \"../../context/appContext\";\nimport \"./WeatherWidgetContainerStyles.css\";\nimport apiKeys from \"../../utils/apiKeys\";\nimport axios from \"axios\";\nimport WeatherCardContainer from \"../WeatherCardContainer\";\n\nimport { mockCurrentWeather, mockForecastData } from \"../../utils/utils\";\nimport HumidityDataCard from \"../HumidityDataCard\";\nimport SearchContainer from \"../SearchContainer\";\n\nexport default function WeatherWidgetContainer() {\n  // We get the location of the user. then set this data into context.\n  // we then set the lat long into context so that child components can work off it.\n  const dispatch = useContext(DispatchContext);\n\n  const appContext = useContext(AppContext);\n\n  useEffect(() => {\n    setTimeout(() => {\n      getLocation();\n    }, 1000);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // watch for lat data changing and then reload the new weather data for the new lat / long\n  useEffect(() => {\n    console.log(\"++++++++ lat changed \", appContext.lat);\n    if (appContext.lat) {\n      SetCurrentLocationWeather(appContext.lat, appContext.long);\n      SetForcastWeather(appContext.lat, appContext.long);\n    }\n  }, [appContext.lat]);\n\n  // watch for city changes if the user searches a new city then update lat long\n\n  useEffect(() => {\n    if (appContext.city) {\n      SetLatLongForCity(appContext.city);\n    }\n  }, [appContext.city]);\n\n  const getLocation = async () => {\n    await navigator.geolocation.getCurrentPosition(\n      (position) => {\n        dispatch({ type: \"SetGeoData\", payload: position });\n        dispatch({\n          type: \"SetLatLong\",\n          payload: {\n            lat: position.coords.latitude,\n            long: position.coords.longitude,\n          },\n        });\n        console.log(position);\n\n        console.log(\"context in get location is \", appContext);\n      },\n      (error) => {\n        dispatch({ type: \"error\" });\n      }\n    );\n\n    return;\n  };\n\n  const SetCurrentLocationWeather = async (lat, long) => {\n    try {\n      // console.log(\"context in Get current location weather is \", appContext);\n      // const data = await axios(\n      //   `${apiKeys.base}current?key=${apiKeys.key}&lat=${lat}&lon=${long}`\n      // );\n\n      // console.log(\"data is \", data);\n\n      // dispatch({ type: \"SetCurrentWeather\", payload: data.data.data[0] });\n      dispatch({ type: \"SetCurrentWeather\", payload: mockCurrentWeather });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const SetForcastWeather = async (lat, long) => {\n    try {\n      // const data = await axios(\n      //   `${apiKeys.base}forecast/daily?key=${apiKeys.key}&lat=${lat}&lon=${long}&days=7`\n      // );\n\n      // console.log(\"FORECASE data is \", data);\n\n      // dispatch({ type: \"SetForecastWeatherData\", payload: data.data.data });\n      dispatch({ type: \"SetForecastWeatherData\", payload: mockForecastData });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const SetLatLongForCity = async (city) => {\n    try {\n      // const data = await axios(\n      //   `${apiKeys.base}current?city=${city}&country=au&key=${apiKeys.key}`\n      // );\n      // dispatch({\n      //   type: \"SetLatLong\",\n      //   payload: {\n      //     lat: data.data.data[0].lat,\n      //     long: data.data.data[0].lon,\n      //   },\n      // });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className=\"WidgetContainer\">\n      <div className=\"CurrentWeatherCard SideWeather\">\n        <CurrentLocationCard />\n      </div>\n      <div className=\"Humidity\">\n        <HumidityDataCard />\n      </div>\n      <div className=\"Search\">\n        <SearchContainer />\n      </div>\n      <div className=\"WeatherCard\">\n        <WeatherCardContainer />\n      </div>\n    </div>\n  );\n}\n","/home/ux5/Projects/codingtest/pwc/weather-app/src/context/appContext.js",[],"/home/ux5/Projects/codingtest/pwc/weather-app/src/reducers/weatherAppReducer.js",[],"/home/ux5/Projects/codingtest/pwc/weather-app/src/components/WeatherCard/index.jsx",[],"/home/ux5/Projects/codingtest/pwc/weather-app/src/components/CurrentLocationCard/index.jsx",[],"/home/ux5/Projects/codingtest/pwc/weather-app/src/utils/apiKeys.js",[],"/home/ux5/Projects/codingtest/pwc/weather-app/src/hooks/useFetch.js",[],["74","75"],"/home/ux5/Projects/codingtest/pwc/weather-app/src/components/WeatherCardContainer/index.jsx",[],"/home/ux5/Projects/codingtest/pwc/weather-app/src/utils/utils.js",[],"/home/ux5/Projects/codingtest/pwc/weather-app/src/components/HumidityDataCard/index.jsx",[],"/home/ux5/Projects/codingtest/pwc/weather-app/src/components/SearchContainer/index.jsx",[],"/home/ux5/Projects/codingtest/pwc/weather-app/src/hooks/useInputState.js",[],"/home/ux5/Projects/codingtest/pwc/weather-app/src/hooks/useToggleState.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":6,"column":8,"nodeType":"82","messageId":"83","endLine":6,"endColumn":15},{"ruleId":"80","severity":1,"message":"84","line":7,"column":8,"nodeType":"82","messageId":"83","endLine":7,"endColumn":13},{"ruleId":"85","severity":1,"message":"86","line":35,"column":6,"nodeType":"87","endLine":35,"endColumn":22,"suggestions":"88"},{"ruleId":"76","replacedBy":"89"},{"ruleId":"78","replacedBy":"90"},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'apiKeys' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'SetCurrentLocationWeather', 'SetForcastWeather', and 'appContext.long'. Either include them or remove the dependency array.","ArrayExpression",["93"],["91"],["92"],"no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},"Update the dependencies array to be: [SetCurrentLocationWeather, SetForcastWeather, appContext.lat, appContext.long]",{"range":"96","text":"97"},[1321,1337],"[SetCurrentLocationWeather, SetForcastWeather, appContext.lat, appContext.long]"]